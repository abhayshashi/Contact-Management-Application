-- CREATE TABLES DDL
 
  CREATE TABLE "CONTACTS_AUTH" 
   (
    "AUTH_ID" NUMBER(,0) NOT NULL PRIMARY KEY, 
    "EMAIL_ADDRESS" VARCHAR2(50 BYTE) NOT NULL, 
    "EMAIL_PASSWORD" VARCHAR2(50 BYTE) NOT NULL,
    "SECRET_KEY" VARCHAR2(50 BYTE)
   );


  CREATE TABLE "CONTACTS" 
   ("CONTACT_ID" NUMBER(,0) NOT NULL PRIMARY KEY, 
    "AUTH_ID" NUMBER(,0) NOT NULL,
    "CONTACT_NAME" VARCHAR2(50 BYTE), 
    "EMAIL_ADDRESS" VARCHAR2(50 BYTE) NOT NULL, 
    "PHONE_NUMBER" NUMBER(,0) NOT NULL,
    FOREIGN KEY (AUTH_ID) REFERENCES CONTACTS_AUTH(AUTH_ID)
   );


-- CREATE SEQUENCES DDL

--------------------------------------------------------
--  DDL for Sequence SEQ_CONTACTS_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SEQ_CONTACTS_ID"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;


--------------------------------------------------------
--  DDL for Sequence SEQ_CONTACTS_AUTH_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SYSTEM"."SEQ_CONTACTS_AUTH_ID"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

/***/

-- CREATE TRIGGERS DDL

CREATE OR REPLACE TRIGGER TRG_CA_ID
BEFORE INSERT ON "SYSTEM"."CONTACTS_AUTH"
FOR EACH ROW
BEGIN
    SELECT SEQ_CONTACTS_AUTH_ID.NEXTVAL
    INTO :NEW.AUTH_ID
    FROM DUAL;

END;
/


CREATE OR REPLACE TRIGGER TRG_CT_ID
BEFORE INSERT ON "SYSTEM"."CONTACTS"
FOR EACH ROW
BEGIN
    SELECT SEQ_CONTACTS_ID.NEXTVAL
    INTO :NEW.CONTACT_ID
    FROM DUAL;

END;
/